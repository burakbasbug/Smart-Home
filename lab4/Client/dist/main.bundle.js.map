{"version":3,"sources":["webpack:///./src/app/model/controlUnit.ts","webpack:///./src/app/model/device.ts","webpack:///./src/app/components/login.component.ts","webpack:///./src/app/components/options.component.ts","webpack:///./src/app/components/overview.component.ts","webpack:///./src/app/model/controlType.ts","webpack:///./src/app/components/device-details.component.ts","webpack:///./src/app/services/device-parser.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/access.service.ts","webpack:///./src/app/components/app.component.ts","webpack:///./src/app/components/boolean-device-details.component.ts","webpack:///./src/app/components/continuous-device-details.component.ts","webpack:///./src/app/components/devices.component.ts","webpack:///./src/app/components/enum-device-details.component.ts","webpack:///./src/app/components/navigation.component.ts","webpack:///./src/app/components/overlay.component.ts","webpack:///./src/app/components/sidebar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/services/device.service.ts","webpack:///./src/app/views/boolean-device-details.component.html","webpack:///./src/app/views/continuous-device-details.component.html","webpack:///./src/app/views/details.html","webpack:///./src/app/views/devices.component.html","webpack:///./src/app/views/enum-device-details.component.html","webpack:///./src/app/views/login.html","webpack:///./src/app/views/navigation.component.html","webpack:///./src/app/views/options.html","webpack:///./src/app/views/overlay.component.html","webpack:///./src/app/views/overview.html","webpack:///./src/app/views/sidebar.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {ControlType} from \"./controlType\";\n\n/**\n * Definition für die Steuerungselemente eines Gerätes\n */\nexport class ControlUnit {\n  /**\n   * Name des Steuerungselements\n   */\n  name: string;\n  /**\n   * Typ des Steuerungselements (enum, boolean, continuous)\n   */\n  type: ControlType;\n  /**\n   * Aktueller Wert dieses ControlUnit\n   * @type {number}\n   */\n  current: number = -1;\n  /**\n   * Spezifiziert ob dieses Steuerungselement die primäre Steuerung des dazugehörigen Gerätes darstellt\n   */\n  primary: boolean;\n\n  /**\n   * Mögliche Werte des Steuerungselements (wird nur für enum Typ benötigt)\n   * Füllen Sie ein Dropdownauswahlmenü mit diesen Werten, um eine Falscheingabe zu verhindern\n   */\n  values?: [string];\n  /**\n   * Minimaler Wert für dieses Steuerungslement (wir nur bei Kontinuierlichem Typ benötigt)\n   * Legen Sie mit diesem Wert den minimalen Wert für eine Eingabe fest, um eine Falscheingabe zu verhindern\n   *\n   * @type {number}\n   */\n  min?: number = -1;\n  /**\n   * Maximaler Wert für dieses Steuerungslement (wir nur bei Kontinuierlichem Typ benötigt)\n   * Legen Sie mit diesem Wert den maximalen Wert für eine Eingabe fest, um eine Falscheingabe zu verhindern\n   *\n   * @type {number}\n   */\n  max?: number = -1;\n  /**\n   * Speichert den bisherigen Verlauf der Temperaturänderungen des Gerätes\n   */\n  log?: string;\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/controlUnit.ts","import {ControlUnit} from './controlUnit'\n\n/**\n * Definition eines Gerätes zur Repräsentation eines existierenden Smart Devices\n */\nexport class Device {\n  /**\n   * Eindeutiger Identifkator für dieses Gerät\n   */\n  id: string;\n  /**\n   * Anzeigename des Gerätes, veränderbar durch Benutzer\n   */\n  display_name: string;\n  /**\n   * Typ des Gerätes (Beleuchtung, Heizkörperthermostat, Überwachungskamera, Rollladen, Webcam)\n   */\n  type: string;\n  /**\n   * Genauere Beschreibung des Gerätetypes (bspw. Gerätenummer etc.)\n   */\n  type_name: string;\n  /**\n   * SVG-Grafik zur Anzeige auf Übersichtsseite\n   */\n  image: string;\n  /**\n   * Beschreibung für obiges image (titel von anchor tag)\n   */\n  description: string;\n  /**\n   * Alternativer Text für obiges image\n   */\n  image_alt: string;\n  /**\n   * Liste aller Steuerungselemente für dieses Gerät\n   */\n  control_units?: [ControlUnit];\n  /**\n   * JavaScript Funktion zum Anzeigen der SVG-Grafik\n   * Dieser Variable hält eine Referenz auf die entsprechende Funktion in Ihrer animations.js\n   */\n  draw_image?: Function;\n  /**\n   * JavaScript Funktion zum Animieren der SVG-Grafik\n   * Dieser Variable hält eine Referenz auf die entsprechende Animations-Funktion in Ihrer animations.js\n   */\n  update_image?: Function;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/device.ts","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AccessService} from '../services/access.service';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'my-login',\n  templateUrl: '../views/login.html'\n})\nexport class LoginComponent {\n\n  loginError: boolean = false;\n\n  constructor(private router: Router, private accessService: AccessService) {\n  }\n\n  onSubmit(form: NgForm): void {\n\n    if (!form || !form.value || !form.value[\"username\"] || !form.value[\"password\"]) {\n      this.loginError = true;\n    }\n\n    this.accessService.doLogin(form.value[\"username\"], form.value[\"password\"]).then(successfully => {\n      this.loginError = !successfully;\n      if (successfully) {\n        this.router.navigate(['overview']);\n      }\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login.component.ts","import {Component, OnInit} from '@angular/core';\nimport {AccessService} from \"../services/access.service\";\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport {NgForm} from '@angular/forms';\n\n\n@Component({\n  selector: 'my-options',\n  templateUrl: '../views/options.html'\n})\nexport class OptionsComponent implements OnInit {\n\n  updateError: boolean;\n  error_message: string;\n  updatePasswordURL = \"https://localhost:8082/updatePW\";\n\n  constructor(private accessService: AccessService, private http: Http) {\n  };\n\n  ngOnInit(): void {\n    this.updateError = false;\n  }\n\n  public equalsPW(form: NgForm): boolean {\n    if(!form || !form.value || !form.value[\"repeat-password\"] || !form.value[\"new-password\"]){\n      return false;\n    }\n    return form.value[\"repeat-password\"] === form.value[\"new-password\"];\n  }\n\n  onSubmit(form: NgForm): void {\n\n    this.updateError = false;\n\n    if (!form || !form.value || !form.value[\"new-password\"] || !form.value[\"repeat-password\"] || !form.value[\"old-password\"]) {\n      this.error_message = \"Es wurden nicht alle benötigten Eingaben getätigt!\";\n      this.updateError = true;\n      return;\n    }\n\n\n    var data = {\n      old_password: form.value[\"old-password\"],\n      new_password: form.value[\"new-password\"],\n      repeat_password: form.value[\"repeat-password\"]\n    };\n\n\n    this.http.post(this.updatePasswordURL, {\n      old_password: form.value[\"old-password\"],\n      new_password: form.value[\"new-password\"],\n      repeat_password: form.value[\"repeat-password\"]\n    }, {headers: this.accessService.getTokenHeader()})\n      .toPromise()\n      .then(response => {\n        response = response.json();\n        console.log(response);\n        if (response.status == 200) {\n          form.reset();\n          return;\n        }\n\n        switch (response[\"errorNum\"]) {\n          case 0:\n            this.error_message = \"Das alte Passwort ist nicht korrekt!\";\n            this.updateError = true;\n            break;\n          case 1:\n            this.error_message = \"Passwörter stimmen nicht überein!\";\n            this.updateError = true;\n            break;\n          case 2:\n            this.error_message = \"Das Passwort konnte nicht gespeichert werden!\";\n            this.updateError = true;\n            break;\n        }\n        return;\n      });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/options.component.ts","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'my-overview',\n  templateUrl: '../views/overview.html'\n})\nexport class OverviewComponent {\n\n  isAddDevice: boolean = false;\n\n  addDevice() {\n    this.isAddDevice = true;\n  }\n\n  closeAddDeviceWindow(){\n    this.isAddDevice = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/overview.component.ts","/**\n * Typen der Steuerungselemente\n */\nexport enum ControlType {\n  boolean = 0,\n  enum = 1,\n  continuous = 2\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/controlType.ts","import 'rxjs/add/operator/switchMap';\nimport {Component, OnInit} from \"@angular/core\";\nimport {DeviceService} from \"../services/device.service\";\nimport {Device} from \"../model/device\";\nimport {ActivatedRoute, Params} from \"@angular/router\";\nimport {ControlUnit} from '../model/controlUnit';\nimport {ControlType} from '../model/controlType';\n\n@Component({\n    selector: 'my-device-detail',\n    templateUrl: '../views/details.html'\n  }\n)\n\nexport class DeviceDetailsComponent implements OnInit {\n\n  device: Device;\n  constructor(private deviceService: DeviceService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.params\n      .switchMap((params: Params) => this.deviceService.getDevice(params['id']))\n      .subscribe(device => this.device = device);\n  }\n\n  isEnum(controlUnit: ControlUnit): boolean {\n    return controlUnit.type === ControlType.enum;\n  }\n\n  isContinuous(controlUnit: ControlUnit): boolean{\n    return controlUnit.type === ControlType.continuous;\n  }\n\n  isBoolean(controlUnit: ControlUnit): boolean{\n    return controlUnit.type === ControlType.boolean;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/device-details.component.ts","import {Device} from '../model/device';\nimport {Injectable} from '@angular/core';\nimport {ControlType} from '../model/controlType';\n\ndeclare var drawThermometer: Function;\ndeclare var drawBulb: Function;\ndeclare var drawCam: Function;\ndeclare var drawShutter: Function;\ndeclare var addImage: Function;\n\ndeclare var updateThermometer: Function;\ndeclare var updateBulb: Function;\ndeclare var updateCam: Function;\ndeclare var updateShutter: Function;\n\n\n@Injectable()\nexport class DeviceParserService {\n\n  private function_map = [{id: \"Heizkörperthermostat\", value: drawThermometer}, {\n    id: \"Beleuchtung\",\n    value: drawBulb\n  }, {id: \"Webcam\", value: drawCam}, {id: \"Überwachungskamera\", value: drawCam}, {id: \"Rollladen\", value: drawShutter}];\n\n  private update_map = [{id: \"Heizkörperthermostat\", value: updateThermometer}, {\n    id: \"Beleuchtung\",\n    value: updateBulb\n  }, {id: \"Webcam\", value: updateCam}, {id: \"Überwachungskamera\", value: updateCam}, {\n    id: \"Rollladen\",\n    value: updateShutter\n  }];\n\n  parseDevice(dev: Device): Device {\n\n    var draw = this.function_map.filter(x => x.id === dev.type)[0];\n    var update = this.update_map.filter(x => x.id === dev.type)[0];\n\n    if (draw != null) {\n      dev.draw_image = draw.value;\n    } else if (dev.image != null) {\n      dev.draw_image = addImage;\n    }\n    if (update != null) {\n      dev.update_image = update.value;\n    }\n    for (let controlUnit of dev.control_units) {\n      switch (controlUnit.type.toString()) {\n        case \"continuous\":\n          controlUnit.type = ControlType.continuous;\n          break;\n        case \"enum\":\n          controlUnit.type = ControlType.enum;\n          break;\n        case \"boolean\":\n          controlUnit.type = ControlType.boolean;\n          break;\n      }\n    }\n    return dev;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/device-parser.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 293;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 293\n// module chunks = 0","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {NgModule}             from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {OverviewComponent} from './components/overview.component';\nimport {LoginComponent} from './components/login.component';\nimport {OptionsComponent} from './components/options.component';\nimport {DeviceDetailsComponent} from \"./components/device-details.component\";\nimport {AccessService} from './services/access.service';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'overview', component: OverviewComponent, canActivate: [AccessService]},\n  {path: 'options', component: OptionsComponent, canActivate: [AccessService]},\n  {path: 'details/:id', component: DeviceDetailsComponent, canActivate: [AccessService]},\n  {path: '**', redirectTo: '/login', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import {NgModule, LOCALE_ID} from '@angular/core';\nimport {BrowserModule}  from '@angular/platform-browser';\nimport {FormsModule}    from '@angular/forms';\nimport {HttpModule}    from '@angular/http';\nimport {AppRoutingModule} from './app-routing.module';\nimport {ChartsModule} from 'ng2-charts';\nimport {DatePipe} from '@angular/common';\n\nimport {AppComponent}         from './components/app.component';\nimport {LoginComponent} from './components/login.component';\nimport {SidebarComponent} from './components/sidebar.component';\nimport {DevicesComponent} from './components/devices.component';\nimport {NavigationComponent} from './components/navigation.component';\nimport {OverviewComponent} from './components/overview.component';\nimport {OptionsComponent} from './components/options.component';\nimport {DeviceService} from './services/device.service';\nimport {DeviceParserService} from './services/device-parser.service';\nimport {AccessService} from './services/access.service';\nimport {DeviceDetailsComponent} from \"./components/device-details.component\";\nimport {ContinuousDeviceDetailsComponent} from \"./components/continuous-device-details.component\";\nimport {EnumDeviceDetailsComponent} from \"./components/enum-device-details.component\";\nimport {BooleanDeviceDetailsComponent} from \"./components/boolean-device-details.component\";\nimport {OverlayComponent} from \"./components/overlay.component\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule,\n    ChartsModule,\n  ],\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    BooleanDeviceDetailsComponent,\n    ContinuousDeviceDetailsComponent,\n    EnumDeviceDetailsComponent,\n    DevicesComponent,\n    DeviceDetailsComponent,\n    NavigationComponent,\n    OverviewComponent,\n    OptionsComponent,\n    LoginComponent,\n    OverlayComponent,\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: \"de-at\" },\n    AccessService,\n    DatePipe,\n    DeviceService,\n    DeviceParserService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport {Headers, Http} from '@angular/http';\nimport {CanActivate, Router} from '@angular/router';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n\n@Injectable()\nexport class AccessService implements CanActivate {\n\n  private token_name = \"access-token\";\n\n  //TODO Passen Sie die URLs zu Ihrer REST-Schnittstelle, entsprechend der von Ihnen vorgenommenen Änderungen am Server, an\n\n  private loginURL = \"https://localhost:8082/login\";\n  private logoutURL = \"https://localhost:8082/logout\";\n  private statusURl = \"https://localhost:8082/getStatus\";\n  private token: string = null;\n\n  server_start: Date = new Date;\n  failed_logins: number = 0;\n\n  constructor(private http: Http, private router: Router) {\n  };\n\n  /**\n   * Aktivierungsfunktion für Guards\n   * @returns {boolean}\n   */\n  canActivate() {\n    this.readToken();\n    if (this.token != null) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n  /**\n   * Liest Token vom LocalStorage und speichert diesen in this.token\n   */\n  readToken() {\n    var token = localStorage.getItem(this.token_name);\n    if (token) {\n      this.token = token;\n    }\n  }\n\n  /**\n   * Schreibt JWT in LocalStorage\n   */\n  writeToken() {\n    localStorage.setItem(this.token_name, this.token);\n  }\n\n  /**\n   * Entfernt JWT aus LocalStorage\n   */\n  removeToken() {\n    localStorage.removeItem(this.token_name);\n  }\n\n  /**\n   * Führt den Login mit den bereitgestellten Logindaten durch\n   * @param username\n   * @param password\n   * @returns {Promise<TResult|boolean>|Promise<TResult2|boolean>|Promise<boolean>}\n   */\n  doLogin(username: string, password: string): Promise<boolean> {\n    return this.http.post(this.loginURL, {\"username\": username, \"password\": password}).toPromise().then(res => {\n      res = res.json();\n      if (res[\"status\"] === 200) {\n        this.token = res[\"token\"];\n        this.writeToken();\n\n        this.getServerStatus();\n\n        return true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Erzeugt einen http header, welcher den Token zur Authentifizierung enthält\n   * @returns {any}\n   */\n  getTokenHeader(): Headers {\n\n    if (this.token == null) {\n      return null;\n    }\n    let header = new Headers();\n    header.append(this.token_name, this.token);\n    return header;\n  }\n\n  /**\n   * Führt einen Log-out für den eingeloggten Benutzer durch\n   * @returns {Promise<TResult|boolean>|Promise<TResult2|boolean>|Promise<boolean>}\n   */\n  doLogout(): Promise<boolean> {\n    return this.http.post(this.logoutURL, {}, {headers: this.getTokenHeader()}).toPromise().then(res => {\n      res = res.json();\n      if (res[\"status\"] === 200) {\n        this.removeToken();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Liest den Serverstatus (Startdatum, Anzahl der fehlgeschlagenen Log-ins) aus\n   */\n  getServerStatus(): void {\n    this.http.get(this.statusURl, {headers: this.getTokenHeader()}).toPromise().then(res => {\n      res = res.json();\n      if (res[\"status\"] === 200) {\n        this.server_start = res[\"date\"] as Date;\n        this.failed_logins = res[\"failed\"] as number;\n      }\n    });\n  }\n\n\n  setToken(token: string): void {\n    this.token = token;\n  }\n\n  getToken(): string {\n    if (this.token) {\n      return this.token;\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/access.service.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/app.component.ts","import {Component, Input, OnInit} from '@angular/core';\nimport {Device} from \"../model/device\";\nimport {ControlUnit} from \"../model/controlUnit\";\nimport {DeviceService} from \"../services/device.service\";\n\n@Component({\n  selector: 'boolean-details',\n  templateUrl: '../views/boolean-device-details.component.html'\n})\nexport class BooleanDeviceDetailsComponent implements OnInit {\n  @Input()\n  device: Device;\n\n  @Input()\n  controlUnit: ControlUnit;\n\n  constructor(private deviceService: DeviceService) {\n  }\n\n  new_value: boolean;\n\n  ngOnInit(): void {\n    this.new_value = this.controlUnit.current == 1;\n\n    this.deviceService.getUpdateRegister().subscribe(values => {\n      if (values.unitId == this.device.control_units.indexOf(this.controlUnit) && this.device.id == values.id) {\n        this.updateChart();\n      }\n    });\n    this.createChart();\n  }\n\n  createChart(): void {\n\n    var id = this.device.id;\n    var unitId = this.device.control_units.indexOf(this.controlUnit);\n\n    var num = Number(sessionStorage.getItem(id + \":\" + unitId));\n    if (num > 0) {\n\n      for (var i = 0; i < num; i++) {\n        var value = Number(sessionStorage.getItem(id + \":\" + unitId + \":\" + i + \":value\"));\n        this.doughnutChartData[value ? 1 : 0]++;\n      }\n      this.doughnutChartData = this.doughnutChartData.slice();\n    }\n\n  }\n\n  updateChart(): void {\n    var id = this.device.id;\n    var unitId = this.device.control_units.indexOf(this.controlUnit);\n\n    var num = Number(sessionStorage.getItem(id + \":\" + unitId));\n    if (num > 0) {\n      var value = Number(sessionStorage.getItem(id + \":\" + unitId + \":\" + (num - 1) + \":value\"));\n      this.doughnutChartData[value ? 1 : 0]++;\n      this.doughnutChartData = this.doughnutChartData.slice();\n    }\n  }\n\n  onSubmit(): void {\n    this.deviceService.updateCurrent(this.device, this.new_value ? 1 : 0, this.controlUnit);\n  }\n\n  public doughnutChartData: number[] = [0, 0];\n  public doughnutChartLabels: string[] = ['Aus', 'An'];\n  public doughnutChartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false,\n  };\n  public doughnutChartLegend: boolean = true;\n  public doughnutChartType: string = 'doughnut';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/boolean-device-details.component.ts","import {Component, Input, OnInit, OnDestroy} from '@angular/core';\nimport {Device} from \"../model/device\";\nimport {ControlUnit} from \"../model/controlUnit\";\nimport {DeviceService} from \"../services/device.service\";\nimport {Subject} from 'rxjs/Subject';\n\n@Component({\n  selector: 'continuous-details',\n  templateUrl: '../views/continuous-device-details.component.html'\n})\nexport class ContinuousDeviceDetailsComponent implements OnInit {\n  @Input()\n  device: Device;\n\n  @Input()\n  controlUnit: ControlUnit;\n\n\n  constructor(private deviceService: DeviceService) {\n  };\n\n  new_value: number;\n\n  ngOnInit(): void {\n    this.new_value = this.controlUnit.current;\n\n    this.deviceService.getUpdateRegister().subscribe(values => {\n      if (values.unitId == this.device.control_units.indexOf(this.controlUnit) && this.device.id == values.id) {\n        this.updateChart();\n      }\n    });\n\n    this.createChart();\n  }\n\n  onSubmit(): void {\n    this.deviceService.updateCurrent(this.device, this.new_value, this.controlUnit);\n  }\n\n  createChart() {\n\n    var id = this.device.id;\n    var unitId = this.device.control_units.indexOf(this.controlUnit);\n\n    var num = Number(sessionStorage.getItem(id + \":\" + unitId));\n    if (num > 0) {\n\n      for (var i = 0; i < num; i++) {\n        var value = sessionStorage.getItem(id + \":\" + unitId + \":\" + i + \":value\");\n        var time = sessionStorage.getItem(id + \":\" + unitId + \":\" + i + \":time\");\n\n        this.lineChartData[0].data.push(value);\n        this.lineChartLabels.push(time);\n      }\n      this.lineChartData = this.lineChartData.slice();\n    }\n  }\n\n  updateChart() {\n\n    var id = this.device.id;\n    var unitId = this.device.control_units.indexOf(this.controlUnit);\n\n    var num = Number(sessionStorage.getItem(id + \":\" + unitId));\n\n    var value = sessionStorage.getItem(id + \":\" + unitId + \":\" + (num - 1) + \":value\");\n    var time = sessionStorage.getItem(id + \":\" + unitId + \":\" + (num - 1) + \":time\");\n\n    this.lineChartData[0].data.push(value);\n    this.lineChartLabels.push(time);\n\n    this.lineChartData = this.lineChartData.slice();\n\n  }\n\n  public lineChartData: Array<any> = [\n    {data: [], label: 'Verlauf'}\n  ];\n  public lineChartLabels: Array<any> = [];\n  public lineChartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  public lineChartColors: Array<any> = [\n    { // dark grey\n      backgroundColor: 'rgba(77,83,96,0.2)',\n      borderColor: 'rgba(77,83,96,1)',\n      pointBackgroundColor: 'rgba(77,83,96,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)'\n    }\n  ];\n  public lineChartLegend: boolean = true;\n  public lineChartType: string = 'line';\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/continuous-device-details.component.ts","import {Component, OnInit, AfterViewChecked} from '@angular/core';\nimport {DeviceService} from \"../services/device.service\";\nimport {Device} from \"../model/device\";\n\ndeclare var $: any;\n\n@Component({\n  selector: 'my-devices',\n  templateUrl: '../views/devices.component.html'\n})\nexport class DevicesComponent implements OnInit, AfterViewChecked {\n\n  devices: Device[];\n  update: boolean = true;\n  edit: {id: string, value: boolean}[];\n\n  device_num: number = 0;\n\n  constructor(private deviceService: DeviceService) {\n  }\n\n  ngOnInit(): void {\n    this.update = true;\n    this.listDevices();\n    this.deviceService.openWebsocket();\n  }\n\n  ngAfterViewChecked(): void {\n\n    if (this.devices != null && this.device_num != this.devices.length && this.device_num < this.devices.length) {\n      this.update = true;\n      this.device_num = this.devices.length\n    }\n\n    if (this.devices != null && this.device_num > this.devices.length) {\n      this.device_num = this.devices.length;\n    }\n\n    if (this.devices == null || !this.update) {\n      return;\n    }\n\n    this.update = false;\n    for (let device of this.devices) {\n      if (device.draw_image == null) {\n        continue;\n      }\n      for (let control_unit of device.control_units) {\n        if (control_unit.primary) {\n          device.draw_image(device.id, device.image, control_unit.min, control_unit.max, control_unit.current, control_unit.values);\n        }\n      }\n    }\n  }\n\n\n  listDevices() {\n    this.deviceService.getDevices().then(devices => {\n      this.devices = devices;\n      this.edit = new Array(this.devices.length);\n      for (let i = 0; i < this.devices.length; i++) {\n        this.edit[i] = {id: this.devices[i].id, value: false};\n      }\n      this.device_num = devices.length;\n    });\n  }\n\n  isEdited(device: Device): boolean {\n    let index = this.findStatus(device);\n    if (index < 0) {\n      return false;\n    }\n    return this.edit[index].value;\n  }\n\n  findStatus(device: Device): number {\n    for (let i = 0; i < this.edit.length; i++) {\n      if (device.id === this.edit[i].id) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  editDevice(device: Device): void {\n\n    let index = this.findStatus(device);\n    if (index >= 0) {\n      this.edit[index].value = true;\n    }\n\n    var device_outer = $(\".device-outer[data-device-id=\" + device.id + \"]\");\n\n    var edit = device_outer.find(\".device-edit\");\n    edit.hide();\n\n    var remove = device_outer.find(\".device-remove\");\n    remove.attr(\"src\", \"../images/ok.png\");\n\n  }\n\n  finishEdit(device: Device): void {\n    this.deviceService.updateDevice(device).then(result => {\n      if (result) {\n        this.showLabel(device);\n      } else {\n        window.alert(\"Änderungen konnten nicht gespeichert werden.\");\n      }\n    });\n  }\n\n  removeDevice(device: Device): void {\n\n    this.deviceService.deleteDevice(device).then(result => {\n      if (result) {\n      } else {\n        window.alert(\"Gerät konnte nicht gelöscht werden.\");\n      }\n    });\n\n  }\n\n  showLabel(device: Device): void {\n\n    let index = this.findStatus(device);\n    if (index >= 0) {\n      this.edit[index].value = false;\n    }\n\n    var device_outer = $(\".device-outer[data-device-id=\" + device.id + \"]\");\n\n    var edit = device_outer.find(\".device-edit\");\n    edit.show();\n\n    var remove = device_outer.find(\".device-remove\");\n    remove.attr(\"src\", \"../images/remove.png\");\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/devices.component.ts","import {Component, Input, OnInit} from '@angular/core';\nimport {Device} from \"../model/device\";\nimport {ControlUnit} from \"../model/controlUnit\";\nimport {DeviceService} from \"../services/device.service\";\n\n@Component({\n  selector: 'enum-details',\n  templateUrl: '../views/enum-device-details.component.html'\n})\nexport class EnumDeviceDetailsComponent implements OnInit {\n  @Input()\n  device: Device;\n\n  @Input()\n  controlUnit: ControlUnit;\n\n  constructor(private deviceService: DeviceService) {\n  };\n\n  new_value: string;\n\n  ngOnInit(): void {\n    this.new_value = this.controlUnit.values[this.controlUnit.current];\n    this.deviceService.getUpdateRegister().subscribe(values => {\n      if (values.unitId == this.device.control_units.indexOf(this.controlUnit) && this.device.id == values.id) {\n        this.updateChart();\n      }\n    });\n    this.createChart();\n\n  }\n\n  updateChart(): void {\n\n    var id = this.device.id;\n    var unitId = this.device.control_units.indexOf(this.controlUnit);\n    var num = Number(sessionStorage.getItem(id + \":\" + unitId));\n    if (num > 0) {\n      var value = Number(sessionStorage.getItem(id + \":\" + unitId + \":\" + (num - 1) + \":value\"));\n      this.polarChartData[value]++;\n      this.polarChartData = this.polarChartData.slice();\n    }\n  }\n\n  createChart(): void {\n\n    for (let val of this.controlUnit.values) {\n      this.polarChartLabels.push(val);\n      this.polarChartData.push(0);\n    }\n\n    var id = this.device.id;\n    var unitId = this.device.control_units.indexOf(this.controlUnit);\n\n    var num = Number(sessionStorage.getItem(id + \":\" + unitId));\n    if (num > 0) {\n\n      for (var i = 0; i < num; i++) {\n        var value = Number(sessionStorage.getItem(id + \":\" + unitId + \":\" + i + \":value\"));\n        this.polarChartData[value]++;\n      }\n      this.polarChartData = this.polarChartData.slice();\n    }\n\n\n  }\n\n  onSubmit(): void {\n    let index = this.controlUnit.values.indexOf(this.new_value);\n    this.deviceService.updateCurrent(this.device, index, this.controlUnit);\n  }\n\n  isSelected(val: string): boolean {\n    return val == this.new_value;\n  }\n\n  public polarChartLabels: string[] = [];\n\n  public polarChartData: any = [];\n  public polarChartType: string = 'polarArea';\n  public polarChartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  public polarChartLegend: boolean = true;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/enum-device-details.component.ts","import {Component} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router'\nimport {OptionsComponent} from \"./options.component\";\nimport {LoginComponent} from \"./login.component\";\nimport {AccessService} from \"../services/access.service\";\n\n@Component({\n  selector: 'my-navigation',\n  templateUrl: '../views/navigation.component.html'\n})\nexport class NavigationComponent {\n\n\n  constructor(private router: Router, private route: ActivatedRoute, private accessService: AccessService) {\n  };\n\n  isOptionsShown(): boolean {\n    return !this.isOptionsite() && !this.isLoginSite();\n  }\n\n  isLogoutShown(): boolean {\n    return !this.isLoginSite();\n  }\n\n\n  isOptionsite(): boolean {\n    return this.route.component === OptionsComponent;\n  }\n\n\n  isLoginSite(): boolean {\n    return this.route.component === LoginComponent;\n  }\n\n  doLogout(): void {\n    console.log(\"doLogout\");\n    this.accessService.doLogout().then(successfully => {\n      if (successfully) {\n        this.router.navigate([\"/login\"]);\n      } else {\n        window.alert(\"Sie konnten nicht abgemeldet werden.\\nBitte versuchen Sie es erneut.\");\n      }\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navigation.component.ts","import {Component, Input, OnInit} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {OverviewComponent} from \"./overview.component\";\nimport {DeviceService} from \"../services/device.service\";\nimport {Device} from \"../model/device\";\nimport {ControlUnit} from \"../model/controlUnit\";\nimport {ControlType} from \"../model/controlType\";\nimport {DeviceType} from \"../model/deviceType\";\n\n@Component({\n  selector: 'my-overlay',\n  templateUrl: '../views/overlay.component.html'\n})\nexport class OverlayComponent implements OnInit {\n\n  @Input()\n  overviewComponent: OverviewComponent = null;\n\n  device_types: any;\n  controlUnit_types: any;\n  selected_type: string = null;\n  controlUnitType_selected: string = null;\n\n  addError: boolean = false;\n  createError: boolean = false;\n\n  constructor(private deviceService: DeviceService) {\n  }\n\n\n  /**\n   * Wird beim Start dieser Componente aufgerufen\n   */\n  ngOnInit(): void {\n    this.device_types = [\"Beleuchtung\", \"Heizkörperthermostat\", \"Rollladen\", \"Überwachungskamera\", \"Webcam\"]\n    this.controlUnit_types = [\"Ein/Auschalter\", \"Diskrete Werte\", \"Kontinuierlicher Wert\"];\n    this.selected_type = this.device_types[0];\n    this.controlUnitType_selected = this.controlUnit_types[0];\n    this.getSPARQLTypes();\n  }\n\n  /**\n   * Schließt das Overlay zum Hinzufügen von neuen Geräten\n   */\n  doClose(): void {\n    if (this.overviewComponent != null) {\n      this.overviewComponent.closeAddDeviceWindow();\n    }\n  }\n\n\n  /**\n   * Lies die Formulardaten ein und speichert diese über die REST-Schnittstelle\n   * @param form\n   */\n  onSubmit(form: NgForm): void {\n\n    this.createError = false;\n\n\n    // Überprüfung ob alle Daten vorhanden\n    if (!form || !form.value || !form.value[\"typename\"] || !form.value[\"displayname\"] || !form.value[\"elementname\"]) {\n      this.addError = true;\n      return;\n    }\n\n    if (this.isEnumSelected() && (!form.value[\"discrete-values\"]) || (form.value[\"discrete-values\"] && form.value[\"discrete-values\"].split(\",\").length == 0)) {\n      this.addError = true;\n      return;\n    }\n\n\n    var device = new Device();\n    device.display_name = form.value[\"displayname\"];\n    device.type_name = form.value[\"typename\"];\n\n    // Fügt das dazugehörige Bild, die alternative Bildbeschreibung und die allgemeine Beschreibung zum neuen Gerät hinzu\n    switch (this.selected_type) {\n      case \"Beleuchtung\":\n        device.image = \"images/bulb.svg\";\n        device.image_alt = \"Glühbirne als Indikator für Aktivierung\";\n        device.description = \"Genauere Informationen zu diesem Beleuchtungselement\";\n        break;\n      case \"Heizkörperthermostat\":\n        device.image = \"images/thermometer.svg\";\n        device.image_alt = \"Thermometer zur Temperaturanzeige\";\n        device.description = \"Genauere Informationen zu diesem Thermostat\";\n        break;\n      case  \"Rollladen\":\n        device.image = \"images/roller_shutter.svg\";\n        device.image_alt = \"Rollladenbild als Indikator für Öffnungszustand\";\n        device.description = \"Genauere Informationen zu diesem Rollladen\";\n        break;\n      case  \"Überwachungskamera\":\n        device.image = \"images/webcam.svg\";\n        device.image_alt = \"Webcam als Indikator für Aktivierung\";\n        device.description = \"Genauere Informationen zu dieser Überwachungskamera\";\n        break;\n      case  \"Webcam\":\n        device.image = \"images/webcam.svg\";\n        device.image_alt = \"Webcam als Indikator für Aktivierung\";\n        device.description = \"Genauere Informationen zu dieser Webcam\";\n        break;\n      default:\n        //T_ODO Lesen Sie die SPARQL - Informationen aus dem SessionStorage und speichern Sie die entsprechenden Informationen zum Gerät\n        let deviceTypes = JSON.parse(sessionStorage.getItem(\"deviceTypes\"));\n        for(let i = 0; i < deviceTypes.length; i++) {\n          if(deviceTypes[i].label == this.selected_type) {\n            device.image = deviceTypes[i].url;\n            device.image_alt = deviceTypes[i].label;\n            device.description = \"Genauere Informationen zu dieser \" + deviceTypes[i].label;\n            break;\n          }\n        }\n        break;\n    }\n\n    device.type = this.selected_type;\n\n    // Bestimmt welches Steuerungselement für dieses Gerät angezeigt werden soll\n    var controlUnit = new ControlUnit();\n    controlUnit.primary = true;\n    switch (this.controlUnitType_selected) {\n      case this.controlUnit_types[0]:\n        controlUnit.type = ControlType.boolean;\n        break;\n      case this.controlUnit_types[1]:\n        controlUnit.type = ControlType.enum;\n        break;\n      case this.controlUnit_types[2]:\n        controlUnit.type = ControlType.continuous;\n        break;\n    }\n    controlUnit.name = form.value[\"elementname\"];\n\n    if (this.isContinuousSelected()) {\n      controlUnit.min = form.value[\"minimum-value\"];\n      controlUnit.max = form.value[\"maximum-value\"];\n      controlUnit.current = controlUnit.min;\n      controlUnit.values = [\"\"];\n    } else {\n      controlUnit.min = controlUnit.max = 0;\n    }\n\n    if (this.isBooleanSelected()) {\n      controlUnit.current = 0;\n      controlUnit.values = [\"\"];\n    }\n\n    if (this.isEnumSelected()) {\n      var values = form.value[\"discrete-values\"].split(\",\");\n      controlUnit.values = [\"\"];\n      controlUnit.values.length = 0;\n      for (var i = 0; i < values.length; i++) {\n        controlUnit.values.push(values[i].trim());\n      }\n      controlUnit.current = 0;\n    }\n    device.control_units = [controlUnit];\n\n    // hinzufügen des Gerätes über die REST-Schnittstelle\n    this.deviceService.createDevice(device).then(result => {\n      if (result) {\n        form.reset();\n        this.overviewComponent.closeAddDeviceWindow();\n      } else {\n        this.createError = true;\n      }\n    });\n\n  }\n\n\n  getSPARQLTypes(): void {\n    //T_ODO Lesen Sie mittels SPARQL die gewünschten Daten (wie in der Angabe beschrieben) aus und speichern Sie diese im SessionStorage\n    this.deviceService.getDeviceTypes().then(deviceTypes => {\n      sessionStorage.setItem(\"deviceTypes\", JSON.stringify(deviceTypes));\n      for(let i = 0;  i < deviceTypes.length; i++) {\n        this.device_types.push(deviceTypes[i].label);\n      }\n    });\n  }\n\n\n  /**\n   * Überprüft ob ein bestimmter Gerätetyp bereits ausgewählt ist\n   * @param type zu überprüfender Typ\n   * @returns {boolean}\n   */\n  isSelected(type: string): boolean {\n    return type == this.device_types[0];\n  }\n\n  /**\n   * Überprüft ob boolean als Steuerungseinheit gewählt wurde\n   * @returns {boolean}\n   */\n  isBooleanSelected(): boolean {\n    return this.controlUnitType_selected === this.controlUnit_types[0];\n  }\n\n  /**\n   * Überprüft ob enum als Steuerungseinheit gewählt wurde\n   * @returns {boolean}\n   */\n  isEnumSelected(): boolean {\n    return this.controlUnitType_selected === this.controlUnit_types[1];\n  }\n\n  /**\n   * Überprüft ob continuous als Steuerungseinheit gewählt wurde\n   * @returns {boolean}\n   */\n  isContinuousSelected(): boolean {\n    return this.controlUnitType_selected === this.controlUnit_types[2];\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/overlay.component.ts","import {Component, OnInit} from \"@angular/core\";\nimport {AccessService} from \"../services/access.service\";\n\n@Component({\n  selector: 'my-sidebar',\n  templateUrl: '../views/sidebar.component.html'\n})\nexport class SidebarComponent implements OnInit{\n\n\n  constructor(private accessService: AccessService){}\n\n  ngOnInit(): void {\n    this.accessService.getServerStatus();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/sidebar.component.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import {Device} from '../model/device';\nimport {Router, Params} from \"@angular/router\";\nimport {Injectable} from '@angular/core';\nimport {Headers, Http} from '@angular/http';\n\nimport {AccessService} from './access.service';\nimport {DeviceParserService} from './device-parser.service';\n\nimport 'rxjs/add/operator/toPromise';\nimport {DatePipe} from '@angular/common';\nimport {ControlUnit} from \"../model/controlUnit\";\nimport {Subject} from 'rxjs/Subject';\nimport {DeviceType} from \"../model/deviceType\";\n\n\n@Injectable()\nexport class DeviceService {\n\n  constructor(private datePipe: DatePipe,\n              private activeRoute: Router,\n              private http: Http,\n              private parserService: DeviceParserService,\n              private accessService: AccessService) {\n  }\n\n  //TODO Passen Sie die URLs zu Ihrer REST-Schnittstelle, entsprechend der von Ihnen vorgenommenen Änderungen am Server, an\n\n  private listDevicesURL = 'https://localhost:8082/listDevices';\n  private updateDeviceURL = 'https://localhost:8082/updateDevice';\n  private deleteDeviceURL = 'https://localhost:8082/deleteDevice';\n  private createDeviceURL = 'https://localhost:8082/createDevice';\n\n  private connection: WebSocket = null;\n\n  private devices: Device[] = null;\n  private updateRegister: Subject<{id: string, unitId: number}> = new Subject();\n\n\n  /**\n   * Löscht das gewünschte Gerät über die REST-Schnittstelle\n   * @param device\n   * @returns {Promise<TResult|boolean>|Promise<TResult2|boolean>|Promise<boolean>}\n   */\n  deleteDevice(device: Device): Promise<boolean> {\n\n    return this.http.post(this.deleteDeviceURL, {\"id\": device.id},\n      {headers: this.accessService.getTokenHeader()})\n      .toPromise()\n      .then(response => {\n        response = response.json();\n        if (response[\"status\"] === 200) {\n          return true;\n        }\n        return false;\n      });\n\n  }\n\n  /**\n   * Fügt das gewünschte Gerät über die REST-Schnittstelle hinzu\n   * @param device\n   * @returns {Promise<TResult|boolean>|Promise<TResult2|boolean>|Promise<boolean>}\n   */\n  createDevice(device: Device): Promise<boolean> {\n    return this.http.post(this.createDeviceURL, {\"device\": JSON.stringify(device)}, {headers: this.accessService.getTokenHeader()})\n      .toPromise()\n      .then(response => {\n        response = response.json();\n        if (response[\"status\"] === 200) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n  }\n\n  /**\n   * Aktualisiert das gewünschte Gerät über die REST-Schnittstelle\n   * @param device\n   * @returns {Promise<TResult|boolean>|Promise<TResult2|boolean>|Promise<boolean>}\n   */\n  updateDevice(device: Device): Promise<boolean> {\n\n    return this.http.post(this.updateDeviceURL, {\"device\": JSON.stringify(device)},\n      {headers: this.accessService.getTokenHeader()})\n      .toPromise()\n      .then(response => {\n        response = response.json();\n        if (response[\"status\"] === 200) {\n          return true;\n        }\n        return false;\n      });\n\n  }\n\n  /**\n   * Aktualisiert den aktuellen Zustand eines Gerätes über die REST-Schnittstelle\n   * Verwendet dafür natives JavaScript\n   * @param device\n   * @param new_value\n   * @param controlUnit\n   */\n  updateCurrent(device: Device, new_value: number, controlUnit: ControlUnit): void {\n\n    var request = new XMLHttpRequest();\n    request.onreadystatechange = this.stateChanged;\n    request[\"controlUnit\"] = controlUnit;\n\n    request.open(\"POST\", \"https://localhost:8082/updateCurrent\", true);\n\n    request.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n    request.setRequestHeader(\"access-token\", this.accessService.getToken());\n\n    var unitId = device.control_units.indexOf(controlUnit);\n\n    var data = \"id=\" + device.id + \"&unitId=\" + unitId + \"&value=\" + new_value;\n    request.send(data);\n\n  }\n\n  /**\n   * Wird bei Statusänderungen des XMLHTTPRequests aufgerufen und liest bei Abschluss die Werte aus\n   * @param event\n   */\n  stateChanged(event: any): void {\n    var request = event.target;\n    switch (request.readyState) {\n      case 0:\n        break;// unsent\n      case 1:\n        break; // opened\n      case 2:\n        break; // sent\n      case 3:\n        break; // loading\n      case 4: // done\n        if (request.status == 200) {\n\n          var response = JSON.parse(request.responseText);\n          if (response.status == 200) {\n            var controlUnit: ControlUnit = request[\"controlUnit\"];\n            controlUnit.log = response.message;\n            controlUnit.current = response.value;\n          }\n        }\n        break;\n    }\n  }\n\n\n  /**\n   * Öffnet einen Websocket zum Server und reagiert entsprechend auf Änderungen\n   */\n  openWebsocket(): void {\n    if (this.connection != null) {\n      return;\n    }\n\n    this.connection = new WebSocket(\"ws://localhost:8081/subscribe\");\n\n    var token = this.accessService.getToken();\n    this.connection.onopen = function (event) {\n      var con = event.target as WebSocket;\n      con.send(JSON.stringify({token: token}));\n    };\n\n    this.connection.onmessage = event => {\n\n      var msg = JSON.parse(event.data);\n      if (msg.method == -1 && !msg.message.includes(\"submitted\")) {\n        this.connection.close();\n        return;\n      }\n\n      // überprüfen welche der unterschiedlichen Updatemethoden verwendet wurden\n      if (msg.method < 0) {\n        return;\n      }\n\n      if (msg.method == 3) {\n        var new_device = JSON.parse(msg.device);\n        new_device = this.parserService.parseDevice(new_device);\n        this.devices.push(new_device);\n        this.devices.slice();\n        return;\n      }\n\n      // auslesen der aktualisierten Werte und speichern dieser\n      var device = this.devices.find(device => device.id === msg.deviceID);\n      switch (msg.method) {\n        case 0:\n          var controlUnit = device.control_units[msg.control_unitID];\n          if (controlUnit.current != msg.value as number) {\n            controlUnit.current = msg.value as number;\n            controlUnit.log = msg.log;\n            if (controlUnit.primary && this.activeRoute.url === \"/overview\") {\n              device.update_image(device.id, controlUnit.min, controlUnit.max, controlUnit.current, controlUnit.values);\n            }\n            this.writeDeviceLog(device.id, msg.control_unitID, msg.value, msg.date as Date);\n          }\n          break;\n        case 1:\n          device.display_name = msg.value;\n          break;\n        case 2:\n          this.devices.splice(this.devices.indexOf(device), 1);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Schreibt einen neuen Zustand eines Gerätes in den SessionStorage\n   * @param id      id des Gerätes\n   * @param unitId  id des Steuerungselements\n   * @param value   neuer Zustand\n   * @param time    Zeitpunkt der Wertänderung\n   */\n  writeDeviceLog(id: string, unitId: string, value: number, time: Date) {\n\n    var num = Number(sessionStorage.getItem(id + \":\" + unitId));\n\n    sessionStorage.setItem(id + \":\" + unitId + \":\" + num + \":value\", value.toString());\n    sessionStorage.setItem(id + \":\" + unitId + \":\" + num + \":time\", this.datePipe.transform(time, \"mediumTime\"));\n\n    sessionStorage.setItem(id + \":\" + unitId, (num + 1) + \"\");\n    this.updateRegister.next({id: id, unitId: Number(unitId)});\n  }\n\n  /**\n   * Liefert ein Subject zurück, welches überwacht werden kann um auf Änderungen an Gerätezuständen zu reagieren\n   * @returns {Subject<{id: string, unitId: number}>}\n   */\n  getUpdateRegister(): Subject<{id: string, unitId: number}> {\n    return this.updateRegister;\n  }\n\n\n  /**\n   * Liefert alle Geräte als Array zurück\n   * @returns {Promise<any>}\n   */\n  getDevices(): Promise<Device[]> {\n    return this.http.get(this.listDevicesURL, {headers: this.accessService.getTokenHeader()})\n      .toPromise()\n      .then(response => {\n\n        var devices = response.json().message.devices as Device[];\n        //parse devices from json to typescript to be usable with angular\n        for (let i = 0; i < devices.length; i++) {\n          devices[i] = this.parserService.parseDevice(devices[i]);\n        }\n        this.devices = devices;\n        return devices;\n\n      })\n      .catch(this.handleError);\n  }\n\n  /**\n   * Liefert das gewünschte Gerät zurück\n   * @param id\n   * @returns {Promise<Device[]>}\n   */\n  getDevice(id: string): Promise<Device> {\n    return this.getDevices()\n      .then(devices => devices.find(device => device.id === id));\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n\n  getDeviceTypes(): Promise<DeviceType[]> {\n\n    let dbpediaUrl = \"http://dbpedia.org/sparql?query=\"\n    let sparqlQuery = \"PREFIX dbc: <http://dbpedia.org/resource/Category:>PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX foaf: <http://xmlns.com/foaf/0.1/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>PREFIX owl: <http://www.w3.org/2002/07/owl#>select distinct ?label, ?url where {  ?device <http://purl.org/dc/terms/subject> dbc:Home_automation.  ?device rdfs:label ?label.  ?device foaf:depiction ?url.  ?device rdf:type ?d_type.  ?producer dbo:product ?device.   FILTER (lang(?label) = 'de')  FILTER (?d_type = owl:Thing)  FILTER (?producer != '')}\";\n    let target = dbpediaUrl + encodeURIComponent(sparqlQuery);\n\n\n    return this.http.get(target)\n        .toPromise()\n        .then(response => {\n          let array = response.json().results.bindings;\n          for(let i = 0; i < array.length; i++) {\n            array[i] = {\"label\": array[i].label.value, \"url\": array[i].url.value};\n          }\n          return array;\n        })\n        .catch(this.handleError);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/device.service.ts","module.exports = \"<div class=\\\"details-image-container\\\">\\n    <canvas alt=\\\"Donatdiagramm für das Gerät\\\" class=\\\"details-image\\\" baseChart\\n            [data]=\\\"doughnutChartData\\\"\\n            [labels]=\\\"doughnutChartLabels\\\"\\n            [chartType]=\\\"doughnutChartType\\\"\\n            [legend]=\\\"doughnutChartLegend\\\"\\n            [options]=\\\"doughnutChartOptions\\\">\\n    </canvas>\\n</div>\\n<div class=\\\"details-data\\\">\\n    <label class=\\\"accessibility\\\" for=\\\"details-log\\\">Letzte Werteänderungen</label>\\n    <textarea id=\\\"details-log\\\" class=\\\"detail-logs\\\" [(ngModel)]=\\\"controlUnit.log\\\" placeholder=\\\"Gerätelog\\\" readonly rows=\\\"6\\\"></textarea>\\n    <div class=\\\"details-settings\\\">\\n        <h3 class=\\\"details-headline\\\">{{controlUnit.name}}</h3>\\n\\n        <form class=\\\"update-form\\\" method=\\\"post\\\" #updateForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <label class=\\\"update-form-field\\\" id=\\\"current-value\\\">\\n                <span class=\\\"current-value\\\">derzeit: {{controlUnit.current==0 ? \\\"Deaktiviert\\\" : \\\"Aktiviert\\\"}}</span>\\n            </label>\\n\\n            <label class=\\\"accessibility\\\" for=\\\"new-value\\\">Bitte gewünschten Wert auswählen.</label>\\n            <input type=\\\"checkbox\\\" id=\\\"new-value\\\" [checked]=\\\"new_value==0 ? null: true\\\" [(ngModel)]=\\\"new_value\\\"\\n                   class=\\\"update-checkbox-input form-input\\\"\\n                   name=\\\"new-value\\\">\\n            <input type=\\\"submit\\\" id=\\\"submit-value\\\" class=\\\"update-form-field button\\\" name=\\\"submit-value\\\"\\n                   value=\\\"Wert setzen\\\">\\n        </form>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/boolean-device-details.component.html\n// module id = 421\n// module chunks = 0","module.exports = \"<div class=\\\"details-image-container\\\">\\n  <canvas alt=\\\"Liniendiagramm für das Gerät\\\" class=\\\"details-image\\\" baseChart\\n          [datasets]=\\\"lineChartData\\\"\\n          [labels]=\\\"lineChartLabels\\\"\\n          [options]=\\\"lineChartOptions\\\"\\n          [colors]=\\\"lineChartColors\\\"\\n          [legend]=\\\"lineChartLegend\\\"\\n          [chartType]=\\\"lineChartType\\\">\\n  </canvas>\\n</div>\\n<div class=\\\"details-data\\\">\\n  <label class=\\\"accessibility\\\" for=\\\"details-log\\\">Letzte Werteänderungen</label>\\n  <textarea id=\\\"details-log\\\" class=\\\"detail-logs\\\" [(ngModel)]=\\\"controlUnit.log\\\" placeholder=\\\"Gerätelog\\\" readonly rows=\\\"6\\\"></textarea>\\n  <div class=\\\"details-settings\\\">\\n    <h3 class=\\\"details-headline\\\">{{controlUnit.name}}</h3>\\n\\n    <form class=\\\"update-form\\\" #updateForm=\\\"ngForm\\\" method=\\\"post\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n\\n      <label class=\\\"update-form-field\\\" id=\\\"current-value\\\">\\n        <span class=\\\"current-value\\\">derzeit: {{controlUnit.current}}</span>\\n      </label>\\n\\n      <label class=\\\"accessibility\\\" for=\\\"new-value\\\">Bitte gewünschten Wert eingeben.</label>\\n      <input type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"controlUnit.min\\\" [max]=\\\"controlUnit.max\\\" id=\\\"new-value\\\" [value]=\\\"new_value\\\" [(ngModel)]=\\\"new_value\\\"\\n             class=\\\"update-form-field form-input\\\" name=\\\"new-value\\\" required >\\n      <input [disabled]=\\\"!updateForm.form.valid\\\" type=\\\"submit\\\" id=\\\"submit-value\\\" class=\\\"update-form-field button\\\" name=\\\"submit-value\\\"\\n             value=\\\"Wert setzen\\\">\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/continuous-device-details.component.html\n// module id = 422\n// module chunks = 0","module.exports = \"<body data-decimal-separator=\\\",\\\" data-grouping-separator=\\\".\\\">\\n<div role=\\\"navigation\\\">\\n    <a href=\\\"#devicessheadline\\\" class=\\\"accessibility\\\">Zum Inhalt springen</a>\\n</div>\\n\\n<my-navigation></my-navigation>\\n<div class=\\\"main-container\\\">\\n    <aside class=\\\"sidebar\\\" aria-labelledby=\\\"serverinfoheadline\\\">\\n        <my-sidebar></my-sidebar>\\n    </aside>\\n    <main *ngIf=\\\"device\\\" aria-labelledby=\\\"deviceheadline\\\" class=\\\"details-container\\\">\\n\\n        <div [attr.data-device-id]=\\\"device.id\\\" class=\\\"details-headline\\\">\\n            <h2 class=\\\"main-headline\\\" id=\\\"deviceheadline\\\">{{device.display_name}}</h2>\\n        </div>\\n        <div class=\\\"details-holder\\\" *ngFor=\\\"let control_unit of device.control_units\\\">\\n            <div *ngFor=\\\"let control_unit of device.control_units\\\"  class=\\\"details-outer\\\">\\n                <continuous-details *ngIf=\\\"isContinuous(control_unit)\\\" [device]=\\\"device\\\" [controlUnit]=\\\"control_unit\\\"></continuous-details>\\n                <enum-details *ngIf=\\\"isEnum(control_unit)\\\" [device]=\\\"device\\\" [controlUnit]=\\\"control_unit\\\"></enum-details>\\n                <boolean-details *ngIf=\\\"isBoolean(control_unit)\\\"  [device]=\\\"device\\\" [controlUnit]=\\\"control_unit\\\"></boolean-details>\\n            </div>\\n        </div>\\n    </main>\\n</div>\\n<footer>\\n    © 2017 BIG Smart Home\\n</footer>\\n</body>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/details.html\n// module id = 423\n// module chunks = 0","module.exports = \"<div class=\\\"devices\\\">\\n\\n  <div *ngFor=\\\"let device of devices\\\" class=\\\"device-outer\\\" [attr.data-device-id]=\\\"device.id\\\">\\n    <a class=\\\"device\\\" [routerLink]=\\\"isEdited(device) ? null : ['/details', device.id]\\\"\\n       [attr.title]=\\\"device.description\\\">\\n      <dl class=\\\"device-properties\\\">\\n        <dt>Anzeigename</dt>\\n        <dd *ngIf=\\\"!isEdited(device)\\\" class=\\\"device-displayname\\\">{{device.display_name}}</dd>\\n        <dd *ngIf=\\\"isEdited(device)\\\" class=\\\"device-displayname\\\">\\n          <input id=\\\"device_displayname_input\\\" (keyup.enter)=\\\"finishEdit(device)\\\" [(ngModel)]=\\\"device.display_name\\\"\\n                 value='\\\" + text + \\\"'/>\\n        </dd>\\n        <dt>Gerätetyp</dt>\\n        <dd class=\\\"device-type\\\">{{device.type}}</dd>\\n        <dt>Gerätename</dt>\\n        <dd class=\\\"device-name\\\">{{device.type_name}}</dd>\\n      </dl>\\n      <div class=\\\"device-image-container\\\">\\n        <svg width=\\\"100%\\\" height=\\\"100%\\\" class=\\\"device-image\\\"></svg>\\n      </div>\\n    </a>\\n    <ul class=\\\"device-actions\\\">\\n      <li>\\n        <a (click)=\\\"editDevice(device)\\\">\\n          <img class=\\\"device-edit\\\" src=\\\"images/edit.png\\\" alt=\\\"Gerät bearbeiten\\\">\\n        </a>\\n      </li>\\n      <li>\\n        <a (click)=\\\"isEdited(device) ? finishEdit(device): removeDevice(device)\\\">\\n          <img class=\\\"device-remove\\\" src=\\\"images/remove.png\\\" alt=\\\"Gerät entfernen\\\">\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/devices.component.html\n// module id = 424\n// module chunks = 0","module.exports = \"<div class=\\\"details-image-container\\\">\\n  <canvas alt=\\\"Polardiagramm für das Gerät\\\" class=\\\"details-image\\\" baseChart\\n          [data]=\\\"polarChartData\\\"\\n          [labels]=\\\"polarChartLabels\\\"\\n          [chartType]=\\\"polarChartType\\\"\\n          [legend]=\\\"polarChartLegend\\\"\\n          [options]=\\\"polarChartOptions\\\">\\n  </canvas>\\n</div>\\n<div class=\\\"details-data\\\">\\n  <label class=\\\"accessibility\\\" for=\\\"details-log\\\">Letzte Werteänderungen</label>\\n  <textarea id=\\\"details-log\\\" class=\\\"detail-logs\\\" [(ngModel)]=\\\"controlUnit.log\\\" placeholder=\\\"Gerätelog\\\" readonly rows=\\\"6\\\"></textarea>\\n  <div class=\\\"details-settings\\\">\\n    <h3 class=\\\"details-headline\\\">{{controlUnit.name}}</h3>\\n\\n    <form class=\\\"update-form\\\" method=\\\"post\\\" #updateForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n      <label class=\\\"update-form-field\\\" id=\\\"current-value\\\">\\n        <span class=\\\"current-value\\\">derzeit: {{controlUnit.values[controlUnit.current]}}</span>\\n      </label>\\n\\n      <label class=\\\"accessibility\\\" for=\\\"new-value\\\">Bitte gewünschten Wert aus Menü auswählen.</label>\\n      <select id=\\\"new-value\\\" class=\\\"update-form-field form-input\\\" name=\\\"new-value\\\" [(ngModel)]=\\\"new_value\\\" required>\\n       <option [value]=\\\"val\\\" [selected]=\\\"isSelected(val) ? true: null\\\"  *ngFor=\\\"let val of controlUnit.values\\\">{{val}}</option>\\n      </select>\\n      <input type=\\\"submit\\\" id=\\\"submit-value\\\" class=\\\"update-form-field button\\\" name=\\\"submit-value\\\"\\n             value=\\\"Wert setzen\\\">\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/enum-device-details.component.html\n// module id = 425\n// module chunks = 0","module.exports = \"<body data-decimal-separator=\\\",\\\" data-grouping-separator=\\\".\\\">\\n\\n<div role=\\\"navigation\\\" aria-label=\\\"jumplinks\\\">\\n  <a href=\\\"#formheadline\\\" class=\\\"accessibility\\\">Zum Inhalt springen</a>\\n</div>\\n\\n<my-navigation></my-navigation>\\n<div class=\\\"main-container\\\">\\n  <main aria-labelledby=\\\"formheadline\\\">\\n    <form class=\\\"form\\\" method=\\\"post\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(loginForm)\\\">\\n      <h2 id=\\\"formheadline\\\" class=\\\"registration-headline\\\">Anmelden</h2>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"username-input\\\">\\n          Benutzername\\n        </label>\\n        <input type=\\\"text\\\" name=\\\"username\\\" id=\\\"username-input\\\" required class=\\\"form-input\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"password-input\\\">\\n          Passwort\\n        </label>\\n        <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password-input\\\" required class=\\\"form-input\\\" minlength=\\\"4\\\"\\n               maxlength=\\\"12\\\" ngModel>\\n      </div>\\n      <div *ngIf=\\\"loginError\\\" class=\\\"form-row form-row-center form-error\\\" id=\\\"login-error\\\">Benutzername oder Passwort nicht korrekt!</div>\\n      <div class=\\\"form-row form-row-center\\\">\\n        <input type=\\\"submit\\\" class=\\\"button button-submit\\\" value=\\\"Anmelden\\\"/>\\n      </div>\\n    </form>\\n  </main>\\n</div>\\n<footer>\\n  © 2017 BIG Smart Home\\n</footer>\\n</body>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/login.html\n// module id = 426\n// module chunks = 0","module.exports = \"<header aria-labelledby=\\\"bannerheadline\\\">\\n  <!--<a [routerLink]=\\\"['/overview']\\\"><img class=\\\"title-image\\\" src=\\\"images/big-logo-small.png\\\" alt=\\\"BIG Bid logo\\\"></a>-->\\n  <a [routerLink]=\\\"isLoginSite() ? ['/login'] : ['/overview']\\\"><img class=\\\"title-image\\\" src=\\\"images/big-logo-small.png\\\"\\n                                                                    alt=\\\"BIG Bid logo\\\"></a>\\n  <h1 class=\\\"header-title\\\" id=\\\"bannerheadline\\\">\\n    BIG Smart Home\\n  </h1>\\n  <nav aria-labelledby=\\\"navigationheadline\\\">\\n    <h2 class=\\\"accessibility\\\" id=\\\"navigationheadline\\\">Navigation</h2>\\n    <ul class=\\\"navigation-list\\\">\\n      <li class=\\\"nav-items\\\">\\n        <ul>\\n          <li *ngIf=\\\"isOptionsShown()\\\">\\n            <a [routerLink]=\\\"['/options']\\\" class=\\\"button\\\" accesskey=\\\"2\\\">Optionen</a>\\n          </li>\\n          <li *ngIf=\\\"isLogoutShown()\\\">\\n            <a (click)=\\\"doLogout()\\\" class=\\\"button\\\" accesskey=\\\"1\\\">Abmelden</a>\\n          </li>\\n        </ul>\\n      </li>\\n      <li class=\\\"overflow-icon\\\">\\n        <a href=\\\"#\\\" class=\\\"button\\\" accesskey=\\\"1\\\">☰</a>\\n      </li>\\n    </ul>\\n  </nav>\\n</header>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/navigation.component.html\n// module id = 427\n// module chunks = 0","module.exports = \"<div role=\\\"navigation\\\" aria-label=\\\"jumplinks\\\">\\n  <a href=\\\"#formheadline\\\" class=\\\"accessibility\\\">Zum Inhalt springen</a>\\n</div>\\n\\n<my-navigation></my-navigation>\\n<div class=\\\"main-container\\\">\\n  <main aria-labelledby=\\\"formheadline\\\">\\n    <form class=\\\"form\\\" method=\\\"post\\\" #optionsForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(optionsForm)\\\">\\n      <h2 id=\\\"formheadline\\\" class=\\\"options-headline\\\">Passwort ändern</h2>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"old-password-input\\\">\\n          Altes Passwort\\n        </label>\\n        <input type=\\\"password\\\" name=\\\"old-password\\\" id=\\\"old-password-input\\\" required class=\\\"form-input\\\"\\n               placeholder=\\\"Altes Passwort\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"new-password-input\\\">\\n          Neues Passwort\\n        </label>\\n        <input type=\\\"password\\\" name=\\\"new-password\\\" id=\\\"new-password-input\\\" placeholder=\\\"Neues Passwort\\\" required\\n               class=\\\"form-input\\\" minlength=\\\"8\\\"\\n               maxlength=\\\"12\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,12}\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"repeat-password-input\\\">\\n          Passwort wiederholen\\n        </label>\\n        <input type=\\\"password\\\" name=\\\"repeat-password\\\" id=\\\"repeat-password-input\\\"\\n               placeholder=\\\"Neues Passwort wiederholen\\\"\\n               required class=\\\"form-input\\\" minlength=\\\"8\\\"\\n               maxlength=\\\"12\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,12}\\\" ngModel>\\n      </div>\\n      <div *ngIf=\\\"updateError\\\" class=\\\"form-row form-row-center form-error\\\" id=\\\"update-error\\\">{{error_message}}</div>\\n      <div class=\\\"form-row form-row-center\\\">\\n        <input [disabled]=\\\"!(equalsPW(optionsForm) && optionsForm.form.valid)\\\" type=\\\"submit\\\" id=\\\"save-changes-button\\\"\\n               class=\\\"button button-submit\\\"\\n               value=\\\" Änderung speichern\\\"/>\\n      </div>\\n    </form>\\n  </main>\\n</div>\\n<footer>\\n  © 2017 BIG Smart Home\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/options.html\n// module id = 428\n// module chunks = 0","module.exports = \"<div class=\\\"overlay\\\">\\n  <div class=\\\"overlay-content\\\">\\n    <a (click)=\\\"doClose()\\\" class=\\\"overlay-exit\\\"><img  src=\\\"images/close.png\\\" alt=\\\"close overlay\\\" width=\\\"10\\\" height=\\\"10\\\"/></a>\\n    <form name=\\\"addForm\\\" class=\\\"form overlay-form\\\" method=\\\"post\\\" #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(addForm)\\\">\\n      <h2 id=\\\"formheadline\\\" class=\\\"create-headline\\\">Gerät anlegen</h2>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"displayname-input\\\">\\n          Anzeigename\\n        </label>\\n        <input type=\\\"text\\\" name=\\\"displayname\\\" id=\\\"displayname-input\\\" required class=\\\"form-input\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"type-input\\\">\\n          Gerätetyp\\n        </label>\\n\\n        <select [(ngModel)]=\\\"selected_type\\\" name=\\\"type-input\\\" class=\\\"form-input\\\" required id=\\\"type-input\\\">\\n          <option [value]=\\\"val\\\"  *ngFor=\\\"let val of device_types\\\">{{val}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"typename-input\\\">\\n          Typenbezeichnung\\n        </label>\\n        <input type=\\\"text\\\" name=\\\"typename\\\" id=\\\"typename-input\\\" required class=\\\"form-input\\\" ngModel>\\n      </div>\\n      <hr>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" >\\n          <b>Steuerungselement</b>\\n        </label>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"elementname-input\\\">\\n          Bezeichnung\\n        </label>\\n        <input type=\\\"text\\\" name=\\\"elementname\\\" id=\\\"elementname-input\\\" required class=\\\"form-input\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"elementtype-input\\\">\\n          Typ\\n        </label>\\n        <select name=\\\"elementtype-input\\\" class=\\\"form-input\\\" [(ngModel)]=\\\"controlUnitType_selected\\\" required id=\\\"elementtype-input\\\">\\n          <option [value]=\\\"val\\\"  *ngFor=\\\"let val of controlUnit_types\\\">{{val}}</option>\\n        </select>\\n      </div>\\n      <div *ngIf=\\\"isContinuousSelected()\\\" class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"minimum-input\\\">\\n          Minimum\\n        </label>\\n        <input type=\\\"number\\\" name=\\\"minimum-value\\\" id=\\\"minimum-input\\\" required class=\\\"form-input\\\" ngModel>\\n      </div>\\n      <div *ngIf=\\\"isContinuousSelected()\\\" class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"maximum-input\\\">\\n          Maximum\\n        </label>\\n        <input type=\\\"number\\\" name=\\\"maximum-value\\\" id=\\\"maximum-input\\\" required class=\\\"form-input\\\" ngModel>\\n      </div>\\n      <div *ngIf=\\\"isEnumSelected()\\\" class=\\\"form-row\\\">\\n        <label class=\\\"form-label\\\" for=\\\"values-input\\\">\\n          Mögliche Werte\\n        </label>\\n        <textarea name=\\\"discrete-values\\\" ngModel id=\\\"values-input\\\" required class=\\\"form-input\\\" placeholder=\\\"offen, halb geöffnet, geschlossen\\\"></textarea>\\n      </div>\\n      <div *ngIf=\\\"addError\\\" class=\\\"form-row form-row-center form-error\\\" id=\\\"add-error\\\">Es wurden nicht alle Angaben wie benötigt vorgenommen!</div>\\n      <div *ngIf=\\\"createError\\\" class=\\\"form-row form-row-center form-error\\\" id=\\\"create-error\\\">Aufgrund eine Serverfehlers konnte das Geräte nicht erstellt werden!</div>\\n      <div class=\\\"form-row form-row-center form-row-bottom\\\">\\n        <button [disabled]=\\\"!addForm.form.valid\\\" class=\\\"button button-submit\\\">\\n          Gerät hinzufügen\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/overlay.component.html\n// module id = 429\n// module chunks = 0","module.exports = \"<body data-decimal-separator=\\\",\\\" data-grouping-separator=\\\".\\\">\\n<div role=\\\"navigation\\\" aria-label=\\\"jumplinks\\\">\\n  <a href=\\\"#devicesheadline\\\" class=\\\"accessibility\\\">Zum Inhalt springen</a>\\n</div>\\n\\n<my-navigation></my-navigation>\\n<div class=\\\"main-container\\\">\\n  <aside class=\\\"sidebar\\\" aria-labelledby=\\\"serverinfoheadline\\\">\\n    <my-sidebar></my-sidebar>\\n  </aside>\\n  <main aria-labelledby=\\\"devicesheadline;\\\">\\n    <div class=\\\"headline-container\\\">\\n      <h2 class=\\\"main-headline\\\" id=\\\"devicesheadline\\\">Geräte</h2>\\n      <a (click)=\\\"addDevice()\\\"><img height=\\\"20\\\" width=\\\"20\\\" src=\\\"../../images/add.png\\\" alt=\\\"Gerät hinzufügen\\\"/></a>\\n    </div>\\n    <my-devices></my-devices>\\n    <my-overlay [overviewComponent]=\\\"this\\\" [hidden]=\\\"isAddDevice ? null : true\\\"></my-overlay>\\n  </main>\\n</div>\\n\\n<footer>\\n  © 2017 BIG Smart Home\\n</footer>\\n</body>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/overview.html\n// module id = 430\n// module chunks = 0","module.exports = \"<div class=\\\"server-info-container\\\">\\n  <h2 class=\\\"accessibility\\\" id=\\\"serverinfoheadline\\\">Serverstatus</h2>\\n  <dl class=\\\"server-data properties\\\">\\n    <dt class=\\\"accessibility\\\">Serverstatus:</dt>\\n    <dd class=\\\"server-status\\\">Serverstatus:</dd>\\n    <dt>Benutzer</dt>\\n    <dd>\\n      <span class=\\\"system-start-time\\\">Administrator</span>\\n    </dd>\\n    <dt>Systemstartzeit</dt>\\n    <dd>\\n      <span class=\\\"system-start-time\\\">{{accessService.server_start | date: 'shortTime'}}</span>\\n    </dd>\\n    <dt>Systemstartdatum</dt>\\n    <dd>\\n      <span class=\\\"system-start-datum\\\">{{accessService.server_start  | date: 'shortDate'}}</span>\\n    </dd>\\n    <dt>Fehlgeschlagene Logins</dt>\\n    <dd>\\n      <span class=\\\"failed-logins\\\">{{accessService.failed_logins}}</span>\\n    </dd>\\n  </dl>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/sidebar.component.html\n// module id = 431\n// module chunks = 0"],"sourceRoot":""}